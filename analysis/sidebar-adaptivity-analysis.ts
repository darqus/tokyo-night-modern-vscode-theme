import * as fs from 'node:fs'
import * as path from 'node:path'

interface ThemeColors {
  [key: string]: string
}

interface Theme {
  name: string
  type: string
  colors: ThemeColors
}

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
const THEME_FILES = [
  'tokyo-night-dark-color-theme.json',
  'tokyo-night-light-color-theme.json',
  'tokyo-night-storm-color-theme.json',
  'tokyo-night-moon-color-theme.json',
  'tokyo-night-high-contrast-color-theme.json',
  'tokyo-night-pastel-color-theme.json',
]

// –≠–ª–µ–º–µ–Ω—Ç—ã –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º–∏
const SIDEBAR_ELEMENTS = {
  'list.activeSelectionBackground': '–ê–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞',
  'list.inactiveSelectionBackground': '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞',
  'list.hoverBackground': '–≠–ª–µ–º–µ–Ω—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏',
  'activityBar.activeBackground': '–ê–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–∞–Ω–µ–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
  'list.focusBackground': '–≠–ª–µ–º–µ–Ω—Ç –≤ —Ñ–æ–∫—É—Å–µ',
}

function loadTheme(filename: string): Theme | null {
  try {
    const themePath = path.join(__dirname, '..', 'themes', filename)
    const content = fs.readFileSync(themePath, 'utf8')
    return JSON.parse(content)
  } catch (error) {
    console.warn(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–º—É: ${filename}`)
    return null
  }
}

function analyzeSidebarAdaptivity(): void {
  console.log('üé® –ê–ù–ê–õ–ò–ó –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–ò –≠–õ–ï–ú–ï–ù–¢–û–í –ë–û–ö–û–í–û–ô –ü–ê–ù–ï–õ–ò')
  console.log(
    '======================================================================'
  )

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–º—ã
  const themes = THEME_FILES.map(loadTheme).filter(Boolean) as Theme[]

  if (themes.length === 0) {
    console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π —Ç–µ–º—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞')
    return
  }

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç
  for (const [property, description] of Object.entries(SIDEBAR_ELEMENTS)) {
    console.log(`\\nüìã ${description.toUpperCase()} (${property})`)
    console.log('================================')

    const values = new Set<string>()
    let hasElement = false

    for (const theme of themes) {
      const value = theme.colors[property]
      if (value) {
        hasElement = true
        values.add(value)
        console.log(
          `   ${theme.name
            .replace('Tokyo Night ', '')
            .toUpperCase()
            .padEnd(12)}: ${value}`
        )
      }
    }

    if (!hasElement) {
      console.log('   ‚ùå –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–π —Ç–µ–º–µ')
      continue
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
    const uniqueCount = values.size
    const totalCount = themes.length

    console.log(`\\n   üìä –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π: ${uniqueCount}/${totalCount}`)

    if (uniqueCount === totalCount) {
      console.log('   ‚úÖ –û–¢–õ–ò–ß–ù–û: –í—Å–µ —Ç–µ–º—ã –∏–º–µ—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞')
    } else if (uniqueCount >= totalCount * 0.8) {
      console.log('   üü° –•–û–†–û–®–û: –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–µ–º –∏–º–µ—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞')
    } else {
      console.log('   üî¥ –ü–†–û–ë–õ–ï–ú–ê: –ú–Ω–æ–≥–∏–µ —Ç–µ–º—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ü–≤–µ—Ç–∞')
    }
  }

  // –û–±—â–∞—è —Å–≤–æ–¥–∫–∞
  console.log('\\n\\nüéØ –û–ë–©–ê–Ø –°–í–û–î–ö–ê –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–ò')
  console.log('=====================================')

  let totalElements = 0
  let adaptiveElements = 0

  for (const property of Object.keys(SIDEBAR_ELEMENTS)) {
    totalElements++

    const values = new Set<string>()
    let hasValues = false

    for (const theme of themes) {
      if (theme.colors[property]) {
        hasValues = true
        values.add(theme.colors[property])
      }
    }

    if (hasValues && values.size >= themes.length * 0.8) {
      adaptiveElements++
    }
  }

  const adaptivityPercent = Math.round((adaptiveElements / totalElements) * 100)
  console.log(
    `üìà –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏: ${adaptivityPercent}% (${adaptiveElements}/${totalElements})`
  )

  if (adaptivityPercent >= 90) {
    console.log('üèÜ –ü–†–ï–í–û–°–•–û–î–ù–û: –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è!')
  } else if (adaptivityPercent >= 70) {
    console.log('‚úÖ –•–û–†–û–®–û: –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã')
  } else {
    console.log('‚ö†Ô∏è  –¢–†–ï–ë–£–ï–¢ –£–õ–£–ß–®–ï–ù–ò–Ø: –ú–Ω–æ–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã')
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
analyzeSidebarAdaptivity()
