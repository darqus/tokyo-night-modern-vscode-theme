import fs from 'fs'
import path from 'path'

/**
 * –ê–Ω–∞–ª–∏–∑ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö —Ñ–æ–Ω–æ–≤ –ø–∞–Ω–µ–ª–µ–π
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ñ–æ–Ω—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ç–µ–º–∞—Ö
 */

interface PanelAnalysis {
  themeName: string
  type: string
  backgrounds: {
    tabActiveBackground?: string
    quickInputBackground?: string
    peekViewEditorBackground?: string
    menuBackground?: string
    notificationsBackground?: string
    widgetBackground?: string
  }
}

function analyzePanelBackgrounds(): void {
  const themesDir = path.join(process.cwd(), 'themes')
  const results: PanelAnalysis[] = []

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã
  const themesToAnalyze = [
    { file: 'tokyo-night-dark-color-theme.json', type: 'dark' },
    { file: 'tokyo-night-light-color-theme.json', type: 'light' },
    { file: 'tokyo-night-storm-color-theme.json', type: 'storm' },
    { file: 'tokyo-night-moon-color-theme.json', type: 'moon' },
    { file: 'tokyo-night-high-contrast-color-theme.json', type: 'contrast' },
    { file: 'tokyo-night-pastel-color-theme.json', type: 'pastel' },
  ]

  for (const theme of themesToAnalyze) {
    const filePath = path.join(themesDir, theme.file)

    if (!fs.existsSync(filePath)) {
      console.log(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${theme.file}`)
      continue
    }

    try {
      const themeData = JSON.parse(fs.readFileSync(filePath, 'utf8'))
      const colors = themeData.colors || {}

      const analysis: PanelAnalysis = {
        themeName: theme.file.replace('-color-theme.json', ''),
        type: theme.type,
        backgrounds: {
          tabActiveBackground: colors['tab.activeBackground'],
          quickInputBackground: colors['quickInput.background'],
          peekViewEditorBackground: colors['peekViewEditor.background'],
          menuBackground: colors['menu.background'],
          notificationsBackground: colors['notifications.background'],
          widgetBackground:
            colors['widget.background'] || colors['peekViewEditor.background'], // fallback
        },
      }

      results.push(analysis)
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ ${theme.file}:`, error)
    }
  }

  // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log('üé® –ê–ù–ê–õ–ò–ó –ê–î–ê–ü–¢–ò–í–ù–´–• –§–û–ù–û–í –ü–ê–ù–ï–õ–ï–ô\n')
  console.log('='.repeat(70))

  for (const result of results) {
    console.log(`\nüì± ${result.themeName.toUpperCase()} (${result.type})`)
    console.log(
      `   –í–∫–ª–∞–¥–∫–∏ (–∞–∫—Ç–∏–≤–Ω–∞—è):      ${
        result.backgrounds.tabActiveBackground || 'N/A'
      }`
    )
    console.log(
      `   –ë—ã—Å—Ç—Ä—ã–π –≤–≤–æ–¥:           ${
        result.backgrounds.quickInputBackground || 'N/A'
      }`
    )
    console.log(
      `   Peek View —Ä–µ–¥–∞–∫—Ç–æ—Ä:     ${
        result.backgrounds.peekViewEditorBackground || 'N/A'
      }`
    )
    console.log(
      `   –ú–µ–Ω—é:                   ${result.backgrounds.menuBackground || 'N/A'}`
    )
    console.log(
      `   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:            ${
        result.backgrounds.notificationsBackground || 'N/A'
      }`
    )
    console.log(
      `   Widget —Ñ–æ–Ω:             ${
        result.backgrounds.widgetBackground || 'N/A'
      }`
    )
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å —Ñ–æ–Ω–æ–≤
  console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –†–ê–ó–ù–û–û–ë–†–ê–ó–ò–Ø –§–û–ù–û–í')
  console.log('='.repeat(40))

  const uniqueTabBgs = new Set(
    results.map((r) => r.backgrounds.tabActiveBackground)
  )
  const uniqueQuickInputBgs = new Set(
    results.map((r) => r.backgrounds.quickInputBackground)
  )
  const uniquePeekViewBgs = new Set(
    results.map((r) => r.backgrounds.peekViewEditorBackground)
  )

  console.log(
    `‚ú® –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ–Ω–æ–≤ –≤–∫–ª–∞–¥–æ–∫: ${uniqueTabBgs.size}/${results.length}`
  )
  console.log(
    `‚ú® –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ–Ω–æ–≤ –±—ã—Å—Ç—Ä–æ–≥–æ –≤–≤–æ–¥–∞: ${uniqueQuickInputBgs.size}/${results.length}`
  )
  console.log(
    `‚ú® –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ–Ω–æ–≤ Peek View: ${uniquePeekViewBgs.size}/${results.length}`
  )

  // –í—ã–≤–æ–¥–∏–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  console.log('\nüìä –£–ù–ò–ö–ê–õ–¨–ù–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø –§–û–ù–û–í')
  console.log('='.repeat(35))

  console.log('\nüè∑Ô∏è  –§–æ–Ω—ã –≤–∫–ª–∞–¥–æ–∫:')
  Array.from(uniqueTabBgs).forEach((bg) => console.log(`   ${bg}`))

  console.log('\nüîç –§–æ–Ω—ã –±—ã—Å—Ç—Ä–æ–≥–æ –≤–≤–æ–¥–∞:')
  Array.from(uniqueQuickInputBgs).forEach((bg) => console.log(`   ${bg}`))

  console.log('\nüëÅÔ∏è  –§–æ–Ω—ã Peek View:')
  Array.from(uniquePeekViewBgs).forEach((bg) => console.log(`   ${bg}`))

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏
  console.log('\n‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ù–´–ï –°–õ–£–ß–ê–ò')
  console.log('='.repeat(25))

  let issues = 0

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–º–Ω–æ–π
  const lightTheme = results.find((r) => r.type === 'light')
  const darkTheme = results.find((r) => r.type === 'dark')

  if (lightTheme && darkTheme) {
    if (
      lightTheme.backgrounds.tabActiveBackground ===
      darkTheme.backgrounds.tabActiveBackground
    ) {
      console.log('üî¥ –í–∫–ª–∞–¥–∫–∏ –≤ —Å–≤–µ—Ç–ª–æ–π –∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º–∞—Ö –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ñ–æ–Ω!')
      issues++
    }
    if (
      lightTheme.backgrounds.quickInputBackground ===
      darkTheme.backgrounds.quickInputBackground
    ) {
      console.log(
        'üî¥ –ë—ã—Å—Ç—Ä—ã–π –≤–≤–æ–¥ –≤ —Å–≤–µ—Ç–ª–æ–π –∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º–∞—Ö –∏–º–µ–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ñ–æ–Ω!'
      )
      issues++
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ç–µ–º—ã –∏–º–µ—é—Ç —Ä–∞–∑–Ω—ã–µ —Ñ–æ–Ω—ã
  if (uniqueTabBgs.size < results.length * 0.8) {
    console.log(
      'üü° –ú–∞–ª–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ–Ω–æ–≤ –≤–∫–ª–∞–¥–æ–∫ - –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π'
    )
    issues++
  }

  if (issues === 0) {
    console.log('‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!')
  }

  console.log(`\nüìà –ò—Ç–æ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: ${issues}`)
}

// –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
analyzePanelBackgrounds()
