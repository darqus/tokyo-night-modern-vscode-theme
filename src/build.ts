/// <reference types="node" />
import * as fs from 'node:fs'
import * as path from 'node:path'
import { getBaseColors } from './theme/base'
import { getButtonColors } from './theme/buttons'
import { getInputColors } from './theme/inputs'
import { getActivityBarColors } from './theme/activityBar'
import { getSideBarColors } from './theme/sideBar'
import { getListColors } from './theme/lists'
import { getEditorColors } from './theme/editor'
import { getTabColors } from './theme/tabs'
import { getStatusBarColors } from './theme/statusBar'
import { getTerminalColors } from './theme/terminal'
import { getGitColors } from './theme/git'
import { getNotificationColors } from './theme/notifications'
import { getMenuColors } from './theme/menus'
import { getPeekViewColors } from './theme/peekView'
import { getDiffEditorColors } from './theme/diffEditor'
import { getMergeColors } from './theme/merge'
import { getChartColors } from './theme/charts'
import { getDebugColors } from './theme/debug'
import { getQuickInputColors } from './theme/quickInput'
import { getMiscColors } from './theme/misc'

// –ù–æ–≤—ã–µ –º–æ–¥—É–ª–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
import { ThemeValidator } from './validation/themeValidator'
import { PropertyValidator } from './validation/propertyValidator'
import type { ThemeObject } from './variants/themeBuilder'

/**
 * –£–ª—É—á—à–µ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ–º—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
 */

const root = path.resolve(__dirname, '..')
const themePath = path.join(root, 'themes', 'tokyo-night-dark-color-theme.json')

export const buildColors = (): Record<string, string> => ({
  ...getBaseColors(),
  ...getButtonColors(),
  ...getInputColors(),
  ...getActivityBarColors(),
  ...getSideBarColors(),
  ...getListColors(),
  ...getEditorColors(),
  ...getTabColors(),
  ...getStatusBarColors(),
  ...getTerminalColors(),
  ...getGitColors(),
  ...getNotificationColors(),
  ...getMenuColors(),
  ...getPeekViewColors(),
  ...getDiffEditorColors(),
  ...getMergeColors(),
  ...getChartColors(),
  ...getDebugColors(),
  ...getQuickInputColors(),
  ...getMiscColors(),
})

/**
 * –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –ø–ª–∞–≥–∏–Ω–æ–≤
 */
// –£–ø—Ä–æ—â–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã: —É–¥–∞–ª—ë–Ω —Å–ª–æ–π Config/Plugin.
// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ ThemeBuilder, –∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ ‚Äî —á–µ—Ä–µ–∑ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –Ω–∏–∂–µ.

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
 */
const validateAndSaveTheme = (
  theme: ThemeObject,
  themePath: string,
  themeName: string
): void => {
  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ —Ç–µ–º—ã
  const propertyValidator = new PropertyValidator()
  const propertyValidation = propertyValidator.validateThemeProperties(theme)

  if (!propertyValidation.passed) {
    console.warn(`‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –≤ ${themeName}:`)
    propertyValidation.issues.forEach((issue) => {
      const severity =
        issue.severity === 'error'
          ? 'üî¥'
          : issue.severity === 'warning'
          ? 'üü°'
          : 'üîµ'
      console.warn(`${severity} ${issue.property}: ${issue.message}`)
      if (issue.suggestion) {
        console.warn(`  üí° ${issue.suggestion}`)
      }
    })

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    const { fixedTheme, fixes } = propertyValidator.fixInvalidProperties(theme)
    if (fixes.length > 0) {
      console.log(`üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixes.length} –ø—Ä–æ–±–ª–µ–º:`)
      fixes.forEach((fix) => {
        console.log(`  ‚Ä¢ ${fix.property}: ${fix.action}`)
      })
      theme = fixedTheme
    }
  } else {
    console.log(`‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–≤–æ–π—Å—Ç–≤ ${themeName} –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ`)
  }

  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ–º—ã (—Å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
  const qualityValidator = new ThemeValidator({ skipInfo: true })
  const qualityValidation = qualityValidator.validateTheme(theme)

  if (!qualityValidation.passed) {
    console.warn(`‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞—á–µ—Å—Ç–≤–æ–º –≤ ${themeName}:`)
    qualityValidation.issues.forEach((issue) => {
      const severity =
        issue.severity === 'error'
          ? 'üî¥'
          : issue.severity === 'warning'
          ? 'üü°'
          : 'üîµ'
      console.warn(`${severity} ${issue.message}`)
      if (issue.suggestion) {
        console.warn(`  üí° ${issue.suggestion}`)
      }
    })
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É
  const out = JSON.stringify(theme, null, 2) + '\n'
  fs.writeFileSync(themePath, out, 'utf8')
}
/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤
 */
const main = () => {
  console.log('üèóÔ∏è  –°–±–æ—Ä–∫–∞ —Ç–µ–º—ã Tokyo Night Lod...')

  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é themes –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const themesDir = path.dirname(themePath)
  if (!fs.existsSync(themesDir)) {
    fs.mkdirSync(themesDir, { recursive: true })
  }

  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ThemeBuilder
  const { ThemeBuilder } = require('./variants/themeBuilder')

  console.log('\nüîç –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–±–æ—Ä–∫–∞ —Ç–µ–º...')

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É
  const theme = ThemeBuilder.buildStandard()
  validateAndSaveTheme(theme, themePath, 'Tokyo Night Dark')
  console.log(`üìÅ –§–∞–π–ª: ${themePath}`)

  console.log('\nüéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–º–∞ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é.')
}

if (require.main === module) {
  main()
}
