import { palette } from '../../palette'
import { alpha, lighten, mix } from '../../utils/color'

export function generateEditorColors(): Record<string, string> {
  const {
    bg,
    fg,
    blue,
    cyan,
    yellow,
    red,
    purple,
    teal,
    ui,
    brackets,
    git,
    interactive,
    elements,
    special,
  } = palette

  return {
    'selection.background': alpha(interactive.highlight, 0.2),
    'editor.background': bg.editor,
    'editor.foreground': fg.brighter,
    'editor.foldBackground': alpha(elements.foldBackground, 0.2),
    'editorLink.activeForeground': ui.linkActive,
    'editor.selectionBackground': alpha(interactive.highlight, 0.2),
    'editor.inactiveSelectionBackground': alpha(interactive.highlight, 0.2),
    'editor.findMatchBackground': alpha(blue.light, 0.2),
    'editor.findMatchBorder': yellow.main,
    'editor.findMatchHighlightBackground': alpha(blue.light, 0.2),
    'editor.findRangeHighlightBackground': alpha(interactive.selected, 0.2),
    'editor.rangeHighlightBackground': alpha(teal.main, 0.2),
    'editor.wordHighlightBackground': alpha(purple.light, 0.2),
    'editor.wordHighlightStrongBackground': alpha(purple.bright, 0.2),
    'editor.selectionHighlightBackground': alpha(cyan.medium, 0.2),
    'editorStickyScrollHover.background': alpha(interactive.highlight, 0.2),
    'editorCursor.foreground': fg.brightest,
    'editorIndentGuide.background1': elements.indentGuidesBackground,
    'editorIndentGuide.activeBackground1': mix(blue.primary, bg.main, 0.7),
    'editorLineNumber.foreground': special.disabled,
    'editorLineNumber.activeForeground': fg.bright,
    'editor.lineHighlightBackground': bg.light,
    'editorWhitespace.foreground': lighten(special.badge, 0.08),
    'editorMarkerNavigation.background': bg.main,
    'editorHoverWidget.background': bg.main,
    'editorHoverWidget.border': lighten(bg.main, 0.02),
    'editorBracketMatch.background': bg.main,
    'editorBracketMatch.border': lighten(bg.main, 0.02),
    'editorBracketHighlight.foreground1': brackets.blue,
    'editorBracketHighlight.foreground2': brackets.cyan,
    'editorBracketHighlight.foreground3': brackets.purple,
    'editorBracketHighlight.foreground4': brackets.teal,
    'editorBracketHighlight.foreground5': brackets.green,
    'editorBracketHighlight.foreground6': yellow.muted,
    'editorBracketHighlight.unexpectedBracket.foreground': red.dark,
    'editorBracketPairGuide.activeBackground1': brackets.blue,
    'editorBracketPairGuide.activeBackground2': brackets.cyan,
    'editorBracketPairGuide.activeBackground3': brackets.purple,
    'editorBracketPairGuide.activeBackground4': brackets.teal,
    'editorBracketPairGuide.activeBackground5': brackets.green,
    'editorBracketPairGuide.activeBackground6': yellow.muted,
    'editorOverviewRuler.border': lighten(bg.editor, 0.02),
    'editorOverviewRuler.errorForeground': red.dark,
    'editorOverviewRuler.warningForeground': yellow.main,
    'editorOverviewRuler.infoForeground': elements.info,
    'editorOverviewRuler.bracketMatchForeground': bg.darker,
    'editorOverviewRuler.findMatchForeground': alpha(blue.light, 0.4),
    'editorOverviewRuler.rangeHighlightForeground': alpha(teal.main, 0.3),
    'editorOverviewRuler.selectionHighlightForeground': alpha(
      cyan.medium,
      0.25
    ),
    'editorOverviewRuler.wordHighlightForeground': alpha(purple.light, 0.35),
    'editorOverviewRuler.wordHighlightStrongForeground': alpha(
      purple.bright,
      0.45
    ),
    'editorOverviewRuler.modifiedForeground': git.modified,
    'editorOverviewRuler.addedForeground': git.added,
    'editorOverviewRuler.deletedForeground': git.deleted,
    'editorRuler.foreground': bg.darker,
    'editorError.foreground': red.dark,
    'editorWarning.foreground': yellow.main,
    'editorInfo.foreground': cyan.medium,
    'editorHint.foreground': cyan.medium,
    'editorGutter.modifiedBackground': git.modified,
    'editorGutter.addedBackground': git.added,
    'editorGutter.deletedBackground': git.deletedDark,
    'editorGhostText.foreground': special.ghostText,
    'minimapGutter.modifiedBackground': git.modifiedMinimap,
    'minimapGutter.addedBackground': git.addedMinimap,
    'minimapGutter.deletedBackground': git.deletedMinimap,
    'editorGroup.border': lighten(bg.editor, 0.02),
    'editorGroup.dropBackground': lighten(bg.editor, 0.02),
    'editorGroupHeader.tabsBorder': bg.darker,
    'editorGroupHeader.tabsBackground': bg.main,
    'editorGroupHeader.noTabsBackground': bg.main,
    'editorGroupHeader.border': lighten(bg.main, 0.02),
    'editorPane.background': bg.editor,
    'editorWidget.foreground': fg.medium,
    'editorWidget.background': bg.main,
    'editorWidget.border': lighten(bg.main, 0.02),
    'editorWidget.resizeBorder': alpha(special.disabled, 0.2),
    'editorSuggestWidget.background': bg.main,
    'editorSuggestWidget.border': lighten(bg.main, 0.02),
    'editorSuggestWidget.selectedBackground': interactive.selected,
    'editorSuggestWidget.highlightForeground': blue.light,
    'editorCodeLens.foreground': ui.codeLens,
    'editorLightBulb.foreground': yellow.main,
    'editorLightBulbAutoFix.foreground': yellow.main,
    'editorInlayHint.foreground': special.ghostText,
    'peekView.border': lighten(bg.main, 0.02),
    'peekViewEditor.background': bg.main,
    'peekViewEditor.matchHighlightBackground': alpha(blue.light, 0.4),
    'peekViewTitle.background': bg.darker,
    'peekViewTitleLabel.foreground': fg.brighter,
    'peekViewTitleDescription.foreground': fg.medium,
    'peekViewResult.background': bg.main,
    'peekViewResult.selectionForeground': fg.brighter,
    'peekViewResult.selectionBackground': alpha(blue.light, 0.4),
    'peekViewResult.lineForeground': fg.brighter,
    'peekViewResult.fileForeground': fg.medium,
    'peekViewResult.matchHighlightBackground': alpha(blue.light, 0.4),
  }
}
