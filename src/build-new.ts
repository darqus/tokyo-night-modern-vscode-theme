/**
 * –ù–æ–≤–∞—è —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ —Ç–µ–º—ã
 */
import * as fs from 'node:fs'
import * as path from 'node:path'
import { generateTheme } from './generators/theme'

const root = path.resolve(__dirname, '..')
const themePath = path.join(root, 'themes', 'tokyo-night-dark-color-theme.json')

/**
 * –°–±–æ—Ä–∫–∞ —Ç–µ–º—ã
 */
const buildTheme = () => {
  console.log('üèóÔ∏è  –°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–π Tokyo Night —Ç–µ–º—ã...')
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é themes –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const themesDir = path.dirname(themePath)
  if (!fs.existsSync(themesDir)) {
    fs.mkdirSync(themesDir, { recursive: true })
  }
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–º—É
  const theme = generateTheme()
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É
  const themeJson = JSON.stringify(theme, null, 2) + '\n'
  fs.writeFileSync(themePath, themeJson, 'utf8')
  
  console.log(`‚úÖ –¢–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∞: ${themePath}`)
  console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`)
  console.log(`   - –¶–≤–µ—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: ${Object.keys(theme.colors).length}`)
  console.log(`   - –¢–æ–∫–µ–Ω–æ–≤ –ø–æ–¥—Å–≤–µ—Ç–∫–∏: ${theme.tokenColors.length}`)
  console.log(`   - –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤: ${Object.keys(theme.semanticTokenColors || {}).length}`)
}

if (require.main === module) {
  buildTheme()
}

export { buildTheme }