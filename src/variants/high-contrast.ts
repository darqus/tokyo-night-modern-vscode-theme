import { buildColors } from '../build'
import { tokenColors } from '../tokenColors'
import { semanticTokenColors } from '../semanticTokenColors'
import { withAlpha, mix } from '../utils/color'
import type { Hex } from '../types/palette'

/**
 * High contrast variant of the Tokyo Night theme
 * Enhanced for better visibility and accessibility
 */

// Adjust base colors for higher contrast
const highContrastBase = {
  black: '#000000' as Hex,
  white: '#ffffff' as Hex,
  blue: '#4d9eff' as Hex,
  cyan: '#00d0ff' as Hex,
  teal: '#00e0c0' as Hex,
  purple: '#b060ff' as Hex,
  magenta: '#ff55ff' as Hex,
  red: '#ff4040' as Hex,
  green: '#60ff60' as Hex,
  yellow: '#ffff00' as Hex,
  orange: '#ff9900' as Hex,
}

// Enhanced core colors with higher contrast
const highContrastCore = {
  bg: {
    base: highContrastBase.black,
    elevated: mix(highContrastBase.black, highContrastBase.white, 0.1) as Hex,
    overlay: mix(highContrastBase.black, highContrastBase.white, 0.15) as Hex,
    input: mix(highContrastBase.black, highContrastBase.white, 0.12) as Hex,
    hover: mix(highContrastBase.black, highContrastBase.blue, 0.2) as Hex,
    active: mix(highContrastBase.black, highContrastBase.blue, 0.3) as Hex,
    drop: withAlpha(highContrastBase.blue, 0.3),
    lineHighlight: withAlpha(highContrastBase.blue, 0.15),
    bracketMatch: withAlpha(highContrastBase.blue, 0.25),
    tabs: highContrastBase.black,
    selection: {
      active: withAlpha(highContrastBase.blue, 0.4),
      inactive: withAlpha(highContrastBase.blue, 0.25),
      focus: withAlpha(highContrastBase.blue, 0.3),
      menu: withAlpha(highContrastBase.blue, 0.3),
    },
  },
  border: mix(highContrastBase.black, highContrastBase.white, 0.3) as Hex,
  text: {
    primary: mix(highContrastBase.white, highContrastBase.black, 0.1) as Hex,
    muted: mix(highContrastBase.white, highContrastBase.black, 0.4) as Hex,
    subtle: mix(highContrastBase.white, highContrastBase.black, 0.6) as Hex,
    inactive: mix(highContrastBase.white, highContrastBase.black, 0.7) as Hex,
    soft: mix(highContrastBase.white, highContrastBase.cyan, 0.2) as Hex,
    selection: highContrastBase.white,
    subtle2: mix(highContrastBase.white, highContrastBase.black, 0.5) as Hex,
    gray600: mix(highContrastBase.white, highContrastBase.black, 0.6) as Hex,
    comment: mix(highContrastBase.white, highContrastBase.black, 0.7) as Hex,
    commentDoc: mix(highContrastBase.white, highContrastBase.black, 0.65) as Hex,
    commentDocEmphasized: mix(highContrastBase.white, highContrastBase.black, 0.6) as Hex,
    preformat: mix(highContrastBase.white, highContrastBase.cyan, 0.25) as Hex,
    placeholder: mix(highContrastBase.white, highContrastBase.black, 0.75) as Hex,
    editorLinkActive: mix(highContrastBase.white, highContrastBase.blue, 0.3) as Hex,
  },
  accent: {
    blue: highContrastBase.blue,
    cyan: highContrastBase.cyan,
    teal: highContrastBase.teal,
    purple: highContrastBase.purple,
    magenta: highContrastBase.magenta,
    red: highContrastBase.red,
    green: highContrastBase.green,
    yellow: highContrastBase.yellow,
    orange: highContrastBase.orange,
  },
  brand: {
    button: {
      primary: mix(highContrastBase.black, highContrastBase.blue, 0.3) as Hex,
      hover: mix(highContrastBase.black, highContrastBase.blue, 0.4) as Hex,
    },
  },
  ui: {
    shadow: withAlpha(highContrastBase.blue, 0.3),
    selectionWash: withAlpha(highContrastBase.blue, 0.2),
    scrollbarBase: mix(highContrastBase.blue, highContrastBase.white, 0.4) as Hex,
    tab: {
      activeModified: highContrastBase.purple,
      inactiveModified: highContrastBase.cyan,
      unfocusedActive: mix(highContrastBase.blue, highContrastBase.black, 0.3) as Hex,
    },
    git: {
      ignored: mix(highContrastBase.white, highContrastBase.black, 0.75) as Hex,
      deleted: mix(highContrastBase.red, highContrastBase.magenta, 0.3) as Hex,
      conflicting: mix(highContrastBase.cyan, highContrastBase.blue, 0.3) as Hex,
      stageDeleted: mix(highContrastBase.red, highContrastBase.magenta, 0.2) as Hex,
      stageModified: mix(highContrastBase.blue, highContrastBase.blue, 0.3) as Hex,
    },
  },
}

// High contrast palette
const highContrastPalette = {
  bg: highContrastCore.bg,
  line: {
    border: highContrastCore.border,
    menu: highContrastCore.border,
  },
  fg: highContrastCore.text,
  brand: highContrastCore.brand,
  accent: highContrastCore.accent,
  token: {
    // Enhanced token colors for better differentiation
    comment: highContrastCore.text.comment,
    commentDoc: highContrastCore.text.commentDoc,
    commentDocEmphasized: highContrastCore.text.commentDocEmphasized,
    constant: highContrastBase.yellow,
    string: highContrastBase.green,
    color: highContrastCore.text.subtle2,
    invalid: highContrastBase.red,
    invalidDeprecated: highContrastBase.magenta,
    storageType: highContrastBase.magenta,
    storageModifier: highContrastBase.purple,
    interpolation: highContrastBase.cyan,
    templateKeyword: highContrastBase.teal,
    spread: mix(highContrastBase.red, highContrastBase.magenta, 0.5) as Hex,
    operator: highContrastCore.text.muted,
    importExport: highContrastBase.magenta,
    keyword: highContrastBase.magenta,
    keywordSql: highContrastBase.cyan,
    keywordLogical: highContrastBase.magenta,
    tag: highContrastBase.blue,
    tagComponent: highContrastBase.magenta,
    tagPunctuation: highContrastCore.text.muted,
    globalConstant: highContrastBase.yellow,
    variable: highContrastCore.text.primary,
    objectVariable: highContrastCore.text.primary,
    arrayKey: highContrastBase.cyan,
    objectKey: highContrastCore.text.primary,
    objectProperty: highContrastBase.cyan,
    objectPropertyAlt: highContrastCore.text.primary,
    objectKeyLevel3: mix(highContrastBase.cyan, highContrastBase.blue, 0.5) as Hex,
    cVariable: highContrastBase.blue,
    otherVariable: highContrastBase.cyan,
    method: highContrastBase.blue,
    function: highContrastBase.blue,
    functionArg: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
    typeConstant: highContrastBase.magenta,
    variableDefinition: highContrastBase.magenta,
    inheritedClass: highContrastBase.magenta,
    classSupport: highContrastBase.teal,
    className: highContrastCore.text.primary,
    supportFunction: highContrastBase.teal,
    cssProperty: highContrastBase.blue,
    cssFont: highContrastBase.green,
    cssClass: highContrastCore.text.primary,
    cssId: highContrastBase.magenta,
    cssTag: highContrastBase.teal,
    cssReference: highContrastBase.teal,
    cssPunctuation: mix(highContrastBase.blue, highContrastBase.purple, 0.5) as Hex,
    cssAtRule: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
    cssParentSelector: highContrastBase.teal,
    scssMixin: highContrastBase.magenta,
    scssInclude: highContrastBase.purple,
    cssValue: mix(highContrastBase.green, highContrastBase.cyan, 0.5) as Hex,
    languageMethod: highContrastBase.blue,
    thisKeyword: highContrastBase.cyan,
    htmlAttribute: highContrastBase.magenta,
    htmlEntity: highContrastBase.teal,
    vueAttribute: highContrastBase.magenta,
    cssPseudo: highContrastBase.magenta,
    markupInserted: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
    markupDeleted: mix(highContrastBase.red, highContrastBase.orange, 0.5) as Hex,
    markupChanged: mix(highContrastBase.blue, highContrastBase.white, 0.5) as Hex,
    regex: highContrastBase.cyan,
    regexGroup: highContrastBase.purple,
    regexCharClass: highContrastBase.magenta,
    regexCharSet: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
    regexQuantifier: highContrastBase.green,
    regexBackslash: highContrastCore.text.primary,
    escapeChar: highContrastBase.green,
    decorator: highContrastBase.blue,
    cssUnit: highContrastBase.blue,
    jsonKey0: highContrastBase.blue,
    jsonKey1: highContrastBase.teal,
    jsonKey2: highContrastBase.cyan,
    jsonKey3: highContrastBase.magenta,
    jsonKey4: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
    jsonKey5: highContrastBase.teal,
    jsonKey6: highContrastBase.teal,
    jsonKey7: highContrastBase.red,
    jsonKey8: highContrastBase.green,
    plainPunctuation: mix(highContrastBase.blue, highContrastBase.purple, 0.5) as Hex,
    blockPunctuation: mix(highContrastBase.blue, highContrastBase.purple, 0.5) as Hex,
    markdownH1: highContrastBase.green,
    markdownH2: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
    markdownH3: highContrastBase.blue,
    markdownH4: mix(highContrastBase.blue, highContrastCore.text.muted, 0.5) as Hex,
    markdownH5: highContrastCore.text.subtle2,
    markdownH6: mix(highContrastBase.blue, highContrastCore.text.subtle, 0.5) as Hex,
    markdownContent: highContrastCore.text.primary,
    htmlText: highContrastCore.text.subtle2,
    markdownRawInline: highContrastBase.magenta,
    markdownRawPunctuation: highContrastCore.text.gray600,
    markupItalic: highContrastCore.text.primary,
    markupBold: highContrastCore.text.primary,
    markdownBlockquote: highContrastCore.text.gray600,
    markdownLink: highContrastBase.teal,
    markdownCodeBlock: highContrastBase.green,
    markdownSeparator: highContrastCore.text.gray600,
    markupTable: mix(highContrastBase.blue, highContrastCore.text.muted, 0.5) as Hex,
    tokenInfo: highContrastBase.cyan,
    tokenWarn: mix(highContrastBase.cyan, highContrastBase.yellow, 0.5) as Hex,
    tokenError: highContrastBase.red,
    tokenDebug: mix(highContrastBase.magenta, highContrastBase.blue, 0.5) as Hex,
    apacheTag: highContrastBase.red,
    preprocessor: highContrastBase.teal,
    envValue: highContrastBase.blue,
    ignored: highContrastCore.text.comment,
    number: mix(highContrastBase.red, highContrastBase.magenta, 0.5) as Hex,
    markup: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
    error: mix(highContrastBase.red, highContrastBase.orange, 0.5) as Hex,
    codeBlock: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
    linkText: mix(highContrastBase.blue, highContrastCore.text.muted, 0.5) as Hex,
    quoteMark: mix(highContrastBase.blue, highContrastCore.text.subtle, 0.5) as Hex,
    linkUrl: mix(highContrastBase.blue, highContrastCore.text.muted, 0.5) as Hex,
    warning: mix(highContrastBase.cyan, highContrastBase.yellow, 0.5) as Hex,
    deleted: mix(highContrastBase.red, highContrastCore.text.muted, 0.5) as Hex,
    inserted: mix(highContrastBase.magenta, highContrastBase.blue, 0.5) as Hex,
  },
  ansi: {
    black: highContrastBase.black,
    brightBlack: highContrastCore.text.gray600,
    red: highContrastBase.red,
    brightRed: highContrastBase.red,
    green: highContrastBase.green,
    brightGreen: highContrastBase.green,
    yellow: highContrastBase.yellow,
    brightYellow: highContrastBase.yellow,
    blue: highContrastBase.blue,
    brightBlue: highContrastBase.blue,
    magenta: highContrastBase.magenta,
    brightMagenta: highContrastBase.magenta,
    cyan: highContrastBase.cyan,
    brightCyan: highContrastBase.cyan,
    white: highContrastBase.white,
    brightWhite: highContrastBase.white,
  },
  ui: {
    description: highContrastCore.text.primary,
    breadcrumb: highContrastCore.text.primary,
    shadow: {
      widget: highContrastCore.ui.shadow,
      scrollbar: highContrastCore.ui.shadow,
    },
    badge: {
      base: highContrastBase.blue,
      fg: highContrastBase.white,
    },
    sash: {
      hover: mix(highContrastBase.blue, highContrastCore.text.muted, 0.5) as Hex,
    },
    selectionWash: highContrastCore.ui.selectionWash,
    scrollbarBase: highContrastCore.ui.scrollbarBase,
    input: {
      placeholder: highContrastCore.text.placeholder,
      border: highContrastCore.border,
    },
    list: {
      hoverBg: highContrastCore.brand.button.hover,
      dropBg: highContrastBase.blue,
    },
    editorLinkActive: highContrastCore.text.editorLinkActive,
    codeLens: highContrastBase.blue,
    noMatches: highContrastBase.blue,
    settingsHeader: mix(highContrastBase.blue, highContrastCore.text.muted, 0.5) as Hex,
    window: {
      border: mix(highContrastBase.blue, highContrastCore.text.muted, 0.3) as Hex,
    },
    tab: {
      activeBorder: highContrastBase.blue,
      activeModifiedBorder: highContrastCore.ui.tab.activeModified,
      inactiveModifiedBorder: highContrastCore.ui.tab.inactiveModified,
      unfocusedActiveBorder: highContrastCore.ui.tab.unfocusedActive,
      lastPinnedBorder: mix(highContrastBase.blue, highContrastCore.text.subtle, 0.5) as Hex,
    },
    statusItem: {
      hover: mix(highContrastBase.blue, highContrastCore.text.muted, 0.5) as Hex,
      prominentHover: mix(highContrastBase.blue, highContrastCore.text.muted, 0.3) as Hex,
    },
    text: {
      preformat: highContrastCore.text.preformat,
      separator: mix(highContrastBase.blue, highContrastCore.text.subtle, 0.5) as Hex,
    },
    debug: {
      exceptionBorder: mix(highContrastBase.red, highContrastBase.orange, 0.5) as Hex,
      consoleError: highContrastBase.red,
      consoleWarning: mix(highContrastBase.cyan, highContrastBase.yellow, 0.5) as Hex,
      stateLabelBg: mix(highContrastCore.bg.base, highContrastCore.text.subtle2, 0.15) as Hex,
      tokenValue: highContrastCore.text.subtle2,
      tokenString: highContrastBase.green,
      tokenError: highContrastBase.red,
      info: highContrastBase.cyan,
    },
    editorOverview: {
      error: highContrastBase.red,
      info: highContrastBase.cyan,
      modified: highContrastBase.blue,
      added: highContrastBase.green,
      deleted: highContrastBase.red,
    },
    gutter: {
      modified: highContrastBase.blue,
      added: highContrastBase.green,
      deleted: highContrastBase.red,
    },
    minimapGutter: {
      modified: highContrastBase.blue,
      added: highContrastBase.green,
      deleted: highContrastBase.red,
    },
    charts: {
      foreground: highContrastCore.text.subtle2,
    },
    gitlens: {
      foreground: highContrastBase.white,
    },
    git: {
      ignored: highContrastCore.ui.git.ignored,
      deleted: highContrastCore.ui.git.deleted,
      conflicting: highContrastCore.ui.git.conflicting,
      stageDeleted: highContrastCore.ui.git.stageDeleted,
      stageModified: highContrastCore.ui.git.stageModified,
    },
    semantic: {
      white: highContrastCore.text.primary,
      notificationLink: mix(highContrastBase.blue, highContrastCore.text.muted, 0.5) as Hex,
      offline: highContrastBase.red,
    },
  },
  brackets: {
    round: highContrastBase.cyan,
    square: highContrastBase.teal,
    curly: highContrastBase.magenta,
    angle: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
  },
  punctuation: {
    comma: mix(highContrastBase.cyan, highContrastBase.blue, 0.5) as Hex,
    dot: mix(highContrastBase.blue, highContrastBase.cyan, 0.5) as Hex,
    colon: mix(highContrastBase.teal, highContrastBase.cyan, 0.5) as Hex,
    semicolon: mix(highContrastBase.purple, highContrastBase.magenta, 0.5) as Hex,
    operator: mix(highContrastBase.teal, highContrastBase.cyan, 0.5) as Hex,
  },
}

export const highContrastTheme = {
  name: 'Tokyo Night Lod High Contrast',
  displayName: 'Tokyo Night Lod High Contrast',
  author: 'lod',
  maintainers: ['lod'],
  type: 'dark' as const,
  semanticClass: 'tokyo-night-high-contrast',
  semanticTokenColors: semanticTokenColors,
  colors: buildColors(), // This would need to be updated to use highContrastPalette
  tokenColors: tokenColors,
}