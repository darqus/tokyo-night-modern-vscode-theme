import { readFileSync } from 'node:fs'
import { join } from 'node:path'
import { checkContrast } from '../src/theme/utils/contrast'

const themePath = join(__dirname, '../themes/tokyo-night-color-theme.json')
const theme = JSON.parse(readFileSync(themePath, 'utf8'))

const editorBg = theme.colors['editor.background']
const issues: Array<{ name: string; color: string; ratio: number }> = []

console.log('üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–æ–≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞\n')
console.log(`–§–æ–Ω —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞: ${editorBg}\n`)

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º tokenColors
theme.tokenColors.forEach((token: any) => {
  if (token.settings?.foreground) {
    const fg = token.settings.foreground
    const result = checkContrast(fg, editorBg)

    if (!result.aa) {
      issues.push({
        name: token.name || token.scope,
        color: fg,
        ratio: result.ratio,
      })
    }
  }
})

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º semanticTokenColors
Object.entries(theme.semanticTokenColors || {}).forEach(
  ([name, settings]: [string, any]) => {
    if (settings?.foreground) {
      const fg = settings.foreground
      const result = checkContrast(fg, editorBg)

      if (!result.aa) {
        issues.push({
          name: `semantic: ${name}`,
          color: fg,
          ratio: result.ratio,
        })
      }
    }
  }
)

if (issues.length === 0) {
  console.log('‚úÖ –í—Å–µ —Ç–æ–∫–µ–Ω—ã –∏–º–µ—é—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å (‚â•4.5:1)')
} else {
  console.log(`‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ ${issues.length} —Ç–æ–∫–µ–Ω–æ–≤ —Å –Ω–∏–∑–∫–æ–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å—é:\n`)
  issues.forEach((issue) => {
    console.log(`  ${issue.name}`)
    console.log(`    –¶–≤–µ—Ç: ${issue.color}`)
    console.log(`    –ö–æ–Ω—Ç—Ä–∞—Å—Ç: ${issue.ratio}:1 (–Ω—É–∂–Ω–æ ‚â•4.5:1)\n`)
  })
}

console.log(`\nüìä –ò—Ç–æ–≥–æ: ${theme.tokenColors.length} —Ç–æ–∫–µ–Ω–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ`)
console.log(`   –ü—Ä–æ–±–ª–µ–º: ${issues.length}`)
console.log(
  `   –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: ${issues.length === 0 ? '‚úÖ 100%' : `‚ö†Ô∏è  ${Math.round((1 - issues.length / theme.tokenColors.length) * 100)}%`}`
)
