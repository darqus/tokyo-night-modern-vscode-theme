import { generateSemanticTokenColors } from '../src/theme/generator/semantic'

console.log(
  'üé® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤ Tokyo Night Modern\n'
)

const tokens = generateSemanticTokenColors()
const tokenCount = Object.keys(tokens).length

console.log(`üìä –í—Å–µ–≥–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: ${tokenCount}\n`)

// –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const categories = {
  'üü¶ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã': [
    'variable',
    'variable.readonly',
    'variable.readonly.default',
    'parameter',
    'parameter.readonly',
    'parameter.type',
  ],
  'üîµ –°–≤–æ–π—Å—Ç–≤–∞': [
    'property',
    'property.readonly',
    'property.static',
    'property.declaration',
    'property.defaultLibrary',
  ],
  'üü£ –§—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã': [
    'function',
    'function.declaration',
    'function.async',
    'method',
    'method.declaration',
    'method.static',
    'method.async',
    'constructor',
  ],
  'üü¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞': [
    'variable.defaultLibrary',
    'function.defaultLibrary',
    'property.defaultLibrary',
    '*.defaultLibrary',
  ],
  'üåü –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏': [
    'react.hook',
    'react.component',
    'react.props',
    'vue.composable',
    'vue.directive',
    'typescript.generic',
    'typescript.utility',
    'graphql.type',
    'graphql.field',
    'test.describe',
    'test.assertion',
    'test.mock',
  ],
}

Object.entries(categories).forEach(([category, tokenNames]) => {
  console.log(`${category}:`)
  tokenNames.forEach((tokenName) => {
    const token = tokens[tokenName]
    if (token) {
      const color = token.foreground || 'N/A'
      const style = token.fontStyle || 'normal'
      console.log(`  ${tokenName.padEnd(25)} ${color.padEnd(10)} ${style}`)
    }
  })
  console.log()
})

// –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π
console.log('üìà –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π:')
console.log(`  –û—Ä–∏–≥–∏–Ω–∞–ª: 8 —Ç–æ–∫–µ–Ω–æ–≤`)
console.log(`  –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è: ${tokenCount} —Ç–æ–∫–µ–Ω–æ–≤`)
console.log(`  –£–≤–µ–ª–∏—á–µ–Ω–∏–µ: +${Math.round(((tokenCount - 8) / 8) * 100)}%\n`)

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–¥–µ
console.log('üéØ –ü—Ä–∏–º–µ—Ä –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–ª–∏—á–∏—è:')
console.log(`
  const userName: string = 'Tokyo'     // variable + string
  readonly config: Config = {}          // variable.readonly + type
  static API_URL = 'https://api.dev'    // property.static

  async function fetchData(): Promise<Data> {  // function.async + typescript.generic
    const response = await fetch(API_URL)      // variable + function.defaultLibrary
    return response.json()                     // method
  }

  const [data, setData] = useState<Data>()     // react.hook + typescript.generic
`)

console.log('‚ú® –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Ç–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
