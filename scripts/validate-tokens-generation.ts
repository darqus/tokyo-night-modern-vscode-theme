/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∏–∑–∞–π–Ω-—Ç–æ–∫–µ–Ω–æ–≤ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
 * –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π —Ç–æ–∫–µ–Ω–æ–≤ –ø–µ—Ä–µ–¥ –∏—Ö —ç–∫—Å–ø–æ—Ä—Ç–æ–º.
 */

import { tokenValidation } from '../src/theme/token-validation'
import { cssGenerator } from '../src/theme/token-utils'
import { writeFileSync } from 'fs'
import { join } from 'path'

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –≤—Å–µ—Ö —Ç–æ–∫–µ–Ω–æ–≤
const validationResults = tokenValidation.runAllValidations()

console.log('üîç Token Validation Results')
console.log('='.repeat(50))

if (validationResults.isValid) {
  console.log('‚úÖ All tokens are valid!')
} else {
  console.log('‚ùå Validation errors found:')
  validationResults.errors.forEach(error => console.error(`  ‚ùå ${error}`))
}

if (validationResults.warnings.length > 0) {
  console.log('\n‚ö†Ô∏è  Warnings:')
  validationResults.warnings.forEach(warning => console.warn(`  ‚ö†Ô∏è ${warning}`))
}

console.log('='.repeat(50))

// –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
const validationReport = {
  timestamp: new Date().toISOString(),
  isValid: validationResults.isValid,
  errors: validationResults.errors,
  warnings: validationResults.warnings,
  summary: {
    errorCount: validationResults.errors.length,
    warningCount: validationResults.warnings.length
  }
}

const reportPath = join(__dirname, '../dist/validation-report.json')
writeFileSync(reportPath, JSON.stringify(validationReport, null, 2))

console.log(`üìä Validation report saved to: ${reportPath}`)

// –¢–∞–∫–∂–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
if (validationResults.isValid) {
  console.log('\nüé® Generating CSS variables...')
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ–º–Ω–æ–π –∏ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º
 const completeCSS = cssGenerator.generateCompleteCSS()
  
  // –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
  const outputPath = join(__dirname, '../dist/theme-variables.css')
  writeFileSync(outputPath, completeCSS)
  
  console.log(`‚úÖ CSS variables generated: ${outputPath}`)
} else {
  console.log('\n‚ùå Skipping CSS generation due to validation errors')
  process.exit(1) // –ó–∞–≤–µ—Ä—à–∞–µ–º —Å –æ—à–∏–±–∫–æ–π, –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
}

// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ CI/CD
process.exit(validationResults.isValid ? 0 : 1)