#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π CLI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–æ–π Tokyo Night Lod
 * –ë–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 */

import { ThemeValidator } from '../src/validation/themeValidator'
import { ThemeBuilder } from '../src/variants/themeBuilder'
import * as fs from 'node:fs'
import * as path from 'node:path'

interface ThemeData {
  name: string
  type: string
  colors: Record<string, string>
  tokenColors: Array<{
    name?: string
    scope: string | string[]
    settings: {
      foreground?: string
      background?: string
      fontStyle?: string
    }
  }>
  semanticHighlighting?: boolean
  semanticTokenColors?: Record<
    string,
    {
      foreground?: string
      background?: string
      fontStyle?: string
      bold?: boolean
      italic?: boolean
      underline?: boolean
      strikethrough?: boolean
    }
  >
}

const args = process.argv.slice(2)
const command = args[0]

function showHelp() {
  console.log(`
üé® Tokyo Night Lod CLI v0.4.0

–ö–æ–º–∞–Ω–¥—ã:
  build                    –°–æ–±—Ä–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –Ω–∞–±–æ—Ä —Ç–µ–º (dark, hc, minimal, light, accessibility)
  validate <file>          –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–º—É
  info                    –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–º–µ
  help                    –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  node scripts/cli.ts build
  node scripts/cli.ts validate ./themes/theme.json
`)
}

function buildCommand() {
  console.log('üèóÔ∏è  –°–±–æ—Ä–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ —Ç–µ–º...')
  try {
    const outDir = './themes'
    if (!fs.existsSync(outDir)) fs.mkdirSync(outDir, { recursive: true })

    const buildAndWrite = (name: string, theme: ThemeData) => {
      const filename = `tokyo-night-${name}-color-theme.json`
      const outputPath = path.join(outDir, filename)
      fs.writeFileSync(
        outputPath,
        JSON.stringify(theme, null, 2) + '\n',
        'utf8'
      )
      console.log(`‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${outputPath}`)
    }

    buildAndWrite('dark', ThemeBuilder.buildStandard())
    // Note: Other theme variants are not yet implemented in ThemeBuilder
    // buildAndWrite('dark-high-contrast', ThemeBuilder.buildHighContrast())
    // buildAndWrite('dark-minimal', ThemeBuilder.buildMinimal())
    // buildAndWrite('light', ThemeBuilder.buildLight())
    // buildAndWrite('accessibility', ThemeBuilder.buildAccessibility())
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:', error)
    process.exit(1)
  }
}

function validateCommand() {
  const file = args[1]
  if (!file) {
    console.error('‚ùå –£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏')
    process.exit(1)
  }

  console.log(`üîç –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–º—ã: ${file}`)

  try {
    const themeContent = fs.readFileSync(file, 'utf8')
    const theme = JSON.parse(themeContent)

    const validator = new ThemeValidator()
    const result = validator.validateTheme(theme)

    if (result.passed) {
      console.log('‚úÖ –¢–µ–º–∞ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é')
    } else {
      console.log('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:')
      result.issues.forEach((issue) => {
        const icon =
          issue.severity === 'error'
            ? 'üö®'
            : issue.severity === 'warning'
            ? '‚ö†Ô∏è'
            : '‚ÑπÔ∏è'
        console.log(`${icon} [${issue.severity}] ${issue.message}`)
        if (issue.suggestion) {
          console.log(`   üí° ${issue.suggestion}`)
        }
      })

      if (result.issues.some((i) => i.severity === 'error')) {
        process.exit(1)
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', error)
    process.exit(1)
  }
}

// –£–¥–∞–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã plugins –∏ config –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è

function infoCommand() {
  console.log('üé® Tokyo Night Lod ‚Äî —É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞')
  console.log('üì¶ –í–µ—Ä—Å–∏—è: 0.4.0')
  console.log(
    'üèóÔ∏è  –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –ü–ª–æ—Å–∫–∞—è (–±–µ–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏ –ø–ª–∞–≥–∏–Ω–æ–≤), –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ ThemeBuilder'
  )
  console.log('üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:')
  console.log(
    '  - –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã: dark, high-contrast, minimal, light, accessibility'
  )
  console.log('  - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–º')
  console.log('  - –¶–≤–µ—Ç–∞ —Å—Ç—Ä–æ–≥–æ –∏–∑ –ø–∞–ª–∏—Ç—Ä—ã + —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—è (–±–µ–∑ —Ö–∞—Ä–¥–∫–æ–¥–∞)')
  console.log('  - –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å WCAG 2.1 (–∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å)')
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
switch (command) {
  case 'build':
    buildCommand()
    break
  case 'validate':
    validateCommand()
    break
  case 'info':
    infoCommand()
    break
  case 'help':
  case undefined:
    showHelp()
    break
  default:
    console.error(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: ${command}`)
    showHelp()
    process.exit(1)
}
