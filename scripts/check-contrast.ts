import { palette } from '../src/theme/palette'
import { checkContrast } from '../src/theme/utils/contrast'

interface ContrastIssue {
  name: string
  fg: string
  bg: string
  ratio: number
  aa: boolean
  aaa: boolean
}

const issues: ContrastIssue[] = []

function check(name: string, fg: string, bg: string) {
  const result = checkContrast(fg, bg)
  if (!result.aa) {
    issues.push({ name, fg, bg, ...result })
  }
  return result
}

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç–∏ —Ç–µ–º—ã Tokyo Night Modern\n')

// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
console.log('üìä –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏:')
const mainFg = check('–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç', palette.fg.brighter, palette.bg.editor)
console.log(
  `  –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç: ${mainFg.ratio}:1 ${mainFg.aa ? '‚úÖ AA' : '‚ùå'} ${mainFg.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

const dimFg = check('–¢—É—Å–∫–ª—ã–π —Ç–µ–∫—Å—Ç', palette.fg.dim, palette.bg.editor)
console.log(
  `  –¢—É—Å–∫–ª—ã–π —Ç–µ–∫—Å—Ç: ${dimFg.ratio}:1 ${dimFg.aa ? '‚úÖ AA' : '‚ùå'} ${dimFg.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

const brightFg = check('–Ø—Ä–∫–∏–π —Ç–µ–∫—Å—Ç', palette.fg.brightest, palette.bg.editor)
console.log(
  `  –Ø—Ä–∫–∏–π —Ç–µ–∫—Å—Ç: ${brightFg.ratio}:1 ${brightFg.aa ? '‚úÖ AA' : '‚ùå'} ${brightFg.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

// –ê–∫—Ü–µ–Ω—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞
console.log('\nüé® –ê–∫—Ü–µ–Ω—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞ –Ω–∞ —Ñ–æ–Ω–µ:')
const blue = check('Blue', palette.blue.medium, palette.bg.editor)
console.log(
  `  Blue: ${blue.ratio}:1 ${blue.aa ? '‚úÖ AA' : '‚ùå'} ${blue.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

const cyan = check('Cyan', palette.cyan.light, palette.bg.editor)
console.log(
  `  Cyan: ${cyan.ratio}:1 ${cyan.aa ? '‚úÖ AA' : '‚ùå'} ${cyan.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

const green = check('Green', palette.green.main, palette.bg.editor)
console.log(
  `  Green: ${green.ratio}:1 ${green.aa ? '‚úÖ AA' : '‚ùå'} ${green.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

const yellow = check('Yellow', palette.yellow.main, palette.bg.editor)
console.log(
  `  Yellow: ${yellow.ratio}:1 ${yellow.aa ? '‚úÖ AA' : '‚ùå'} ${yellow.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

const red = check('Red', palette.red.main, palette.bg.editor)
console.log(
  `  Red: ${red.ratio}:1 ${red.aa ? '‚úÖ AA' : '‚ùå'} ${red.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

const purple = check('Purple', palette.purple.light, palette.bg.editor)
console.log(
  `  Purple: ${purple.ratio}:1 ${purple.aa ? '‚úÖ AA' : '‚ùå'} ${purple.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

// UI —ç–ª–µ–º–µ–Ω—Ç—ã
console.log('\nüñ•Ô∏è  UI —ç–ª–µ–º–µ–Ω—Ç—ã:')
const sidebarFg = check('Sidebar', palette.fg.medium, palette.bg.darkest)
console.log(
  `  Sidebar: ${sidebarFg.ratio}:1 ${sidebarFg.aa ? '‚úÖ AA' : '‚ùå'} ${sidebarFg.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

const tabActive = check('Active Tab', palette.fg.brighter, palette.bg.main)
console.log(
  `  Active Tab: ${tabActive.ratio}:1 ${tabActive.aa ? '‚úÖ AA' : '‚ùå'} ${tabActive.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

const tabInactive = check('Inactive Tab', palette.fg.medium, palette.bg.light)
console.log(
  `  Inactive Tab: ${tabInactive.ratio}:1 ${tabInactive.aa ? '‚úÖ AA' : '‚ùå'} ${tabInactive.aaa ? '‚úÖ AAA' : '‚ùå'}`
)

// –ò—Ç–æ–≥–∏
console.log('\nüìã –ò—Ç–æ–≥–∏:')
console.log(`  –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${issues.length + 10}`)
console.log(`  –ü—Ä–æ–±–ª–µ–º —Å AA: ${issues.length}`)
console.log(
  `  –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ WCAG AA: ${issues.length === 0 ? '‚úÖ 100%' : `‚ùå ${Math.round((1 - issues.length / 10) * 100)}%`}`
)

if (issues.length > 0) {
  console.log('\n‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å—é:')
  issues.forEach((issue) => {
    console.log(`  ${issue.name}: ${issue.ratio}:1 (–Ω—É–∂–Ω–æ ‚â•4.5:1)`)
  })
}
