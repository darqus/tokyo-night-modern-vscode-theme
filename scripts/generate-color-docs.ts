#!/usr/bin/env node
/**
 * –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ —Ü–≤–µ—Ç–∞–º
 */
import * as fs from 'node:fs'
import * as path from 'node:path'
import { basePalette } from '../src/core/palette'

const generateColorDocs = () => {
  console.log('üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ —Ü–≤–µ—Ç–∞–º...')
  
  const colors = Object.entries(basePalette)
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã —Ü–≤–µ—Ç–æ–≤
  const colorTable = [
    '# üé® –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ Tokyo Night',
    '',
    '## –ë–∞–∑–æ–≤—ã–µ —Ü–≤–µ—Ç–∞',
    '',
    '| –ù–∞–∑–≤–∞–Ω–∏–µ | Hex | –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ |',
    '|----------|-----|--------------|---------------|',
    ...colors.map(([name, hex]) => {
      const usage = getColorUsage(name)
      const preview = `![${hex}](https://via.placeholder.com/20/${hex.slice(1)}/${hex.slice(1)})`
      return `| **${name}** | \`${hex}\` | ${preview} | ${usage} |`
    }),
    '',
    '## –¶–≤–µ—Ç–æ–≤—ã–µ –≥—Ä—É–ø–ø—ã',
    '',
    '### –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ',
    '- **black** - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞',
    '- **gray** - –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã', 
    '- **white** - –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç',
    '',
    '### –•–æ–ª–æ–¥–Ω—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã',
    '- **blue** - –§—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã',
    '- **cyan** - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –¥–∞–Ω–Ω—ã–µ',
    '- **teal** - –¢–∏–ø—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã',
    '- **purple** - –û–ø–µ—Ä–∞—Ç–æ—Ä—ã –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã',
    '',
    '### –¢–µ–ø–ª—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã',
    '- **green** - –°—Ç—Ä–æ–∫–∏ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ',
    '- **yellow** - –ö–ª–∞—Å—Å—ã –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã',
    '- **orange** - –ß–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è',
    '- **red** - –û—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è',
    '- **magenta** - –ê—Ç—Ä–∏–±—É—Ç—ã –∏ —Ç–µ–≥–∏',
    '',
    `*–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ${new Date().toISOString()}*`
  ].join('\n')
  
  const docsPath = path.join(__dirname, '..', 'docs', 'COLORS.md')
  fs.writeFileSync(docsPath, colorTable, 'utf8')
  
  console.log(`‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${docsPath}`)
}

const getColorUsage = (colorName: string): string => {
  const usageMap: Record<string, string> = {
    black: '–§–æ–Ω —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞, –ø–∞–Ω–µ–ª–µ–π',
    gray: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
    white: '–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç, –ø—É–Ω–∫—Ç—É–∞—Ü–∏—è',
    blue: '–§—É–Ω–∫—Ü–∏–∏, –º–µ—Ç–æ–¥—ã, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞',
    cyan: '–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∏–º–ø–æ—Ä—Ç—ã, –¥–∞–Ω–Ω—ã–µ',
    teal: '–¢–∏–ø—ã, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, —Å–≤–æ–π—Å—Ç–≤–∞',
    purple: '–û–ø–µ—Ä–∞—Ç–æ—Ä—ã, –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã',
    green: '–°—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ',
    yellow: '–ö–ª–∞—Å—Å—ã, –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã',
    orange: '–ß–∏—Å–ª–∞, –∑–Ω–∞—á–µ–Ω–∏—è',
    red: '–û—à–∏–±–∫–∏, —Ç–µ–≥–∏, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è',
    magenta: '–ê—Ç—Ä–∏–±—É—Ç—ã, HTML —Ç–µ–≥–∏'
  }
  
  return usageMap[colorName] || '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ'
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  generateColorDocs()
}

export { generateColorDocs }